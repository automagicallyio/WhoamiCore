name: Build, scan and push to AKS

on:
    push:
        tags:
            - '*'
    workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: Set env
      id: setenv_step
      run: |
        echo "RELEASE_VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
        echo "::set-output name=release_version::${GITHUB_REF#refs/tags/})"

    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
        
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Build image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:${{ env.RELEASE_VERSION }}

    - name: 'Container Scan'
      id: container-scan
      uses: Azure/container-scan@v0.1
      continue-on-error: true
      with:
        image-name: ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:${{ env.RELEASE_VERSION }}
    
    - name: Publish container scan results to ASC
      uses: azure/publish-security-assessments@v0
      with:
        artifact-type: containerImage
        subscription-token: ${{ secrets.ASC_SUBSCRIPTION_TOKEN }}
        instrumentation-key: ${{ secrets.AI_INSTRUMENTATION_KEY }}
        scan-results-path: ${{ steps.container-scan.outputs.scan-report-path }}

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Set env
#       run: |
#         # echo "RELEASE_VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
          # echo "x" ${{ jobs.build.steps.setenv_step.outputs.release_version }}
#         # echo "RELEASE_VERSION=$(echo ${{ jobs.build.steps.setenv_step.outputs.release_version }})" >> $GITHUB_ENV

#     - name: Test
#       run: |
#         echo $RELEASE_VERSION
#         echo ${{ env.RELEASE_VERSION }}

    - name: 'Push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:${{ env.RELEASE_VERSION }}

    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
        resource-group: 'whoamicoreDev'
        cluster-name: 'whoamicoreAksDev'
      id: login

    - uses: Azure/k8s-deploy@v1
      with:
        namespace: default
        manifests: |
          .manifests/ingress.yaml
          .manifests/deployment.yaml
          .manifests/service.yaml
        images: |
          ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:${{ env.RELEASE_VERSION }}
