name: Build, scan and deploy to AKS

on:
    push:
        tags:
            - '*'
    workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    # set version
    - name: Set version
      id: setversion_step
      run: |
        if [ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]
        then
          echo "setting release version to commit sha"
          echo "RELEASE_VERSION=$(echo ${{ github.sha }})" >> $GITHUB_ENV
        else
          echo "setting release version to release tag version"
          echo "RELEASE_VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
        fi

    # authenticate
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # build and push image
    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:${{ env.RELEASE_VERSION }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:latest
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:${{ env.RELEASE_VERSION }}

    # - name: 'Container Scan'
    #   id: container_scan
    #   uses: Azure/container-scan@v0.1
    #   continue-on-error: true
    #   with:
    #     image-name: ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:${{ env.RELEASE_VERSION }}
    
    # - name: Publish container scan results to ASC
    #   uses: azure/publish-security-assessments@v0
    #   with:
    #     artifact-type: containerImage
    #     subscription-token: ${{ secrets.asc_subscription_token }}
    #     instrumentation-key: ${{ secrets.ai_instrumentation_key }}
    #     scan-results-path: ${{ steps.container_scan.outputs.scan-report-path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    # set version
    - name: Set version
      run: |
        if [ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]
        then
          echo "setting release version to commit sha"
          echo "RELEASE_VERSION=$(echo ${{ github.sha }})" >> $GITHUB_ENV
        else
          echo "setting release version to release tag version"
          echo "RELEASE_VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
        fi

    # authenticate
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
        resource-group: 'whoamicoreDev'
        cluster-name: 'whoamicoreAksDev'
      id: login

    # create pull secret
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ secrets.REGISTRY_IMAGE_PULL_SECRET }}
        force: true

    # Deploy app to AKS
    - uses: Azure/k8s-deploy@v1
      with:
        namespace: default
        manifests: |
          .manifests/ingress.yaml
          .manifests/deployment.yaml
          .manifests/service.yaml
        images: |
          ${{ secrets.REGISTRY_LOGIN_SERVER }}/whoamicore:${{ env.RELEASE_VERSION }}
        imagepullsecrets: |
          ${{ secrets.REGISTRY_IMAGE_PULL_SECRET }}